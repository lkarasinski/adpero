/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';

type GLTFResult = GLTF & {
	nodes: {
		Icosphere_1: THREE.Mesh;
		Icosphere_2: THREE.Mesh;
		Icosphere_3: THREE.Mesh;
		Icosphere001: THREE.Mesh;
	};
	materials: {
		['tectonic plates']: THREE.MeshStandardMaterial;
		Ocean: THREE.MeshStandardMaterial;
		Poles: THREE.MeshStandardMaterial;
		Coluds: THREE.MeshStandardMaterial;
	};
};

// eslint-disable-next-line @typescript-eslint/no-explicit-any
export default function Model(props: JSX.IntrinsicElements['group']): any {
	const group = useRef<THREE.Group>();
	const { nodes, materials } = useGLTF('/lowpoly_earth.glb') as GLTFResult;
	return (
		<group ref={group} {...props} dispose={null}>
			<group position={[0, 3.47, 0]} scale={3.46}>
				<mesh
					geometry={nodes.Icosphere_1.geometry}
					material={materials['tectonic plates']}
				/>
				<mesh
					geometry={nodes.Icosphere_2.geometry}
					material={materials.Ocean}
				/>
				<mesh
					geometry={nodes.Icosphere_3.geometry}
					material={materials.Poles}
				/>
			</group>
			<mesh
				geometry={nodes.Icosphere001.geometry}
				material={materials.Coluds}
				position={[-4.4, 5.16, -1.38]}
				scale={0.76}
			/>
		</group>
	);
}

useGLTF.preload('/lowpoly_earth.glb');
